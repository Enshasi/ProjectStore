//Editing File migrate
php artisan make:migration add_pending_status_to_nameTable_table

channels database

1-php artisan notification:table
2-php artisan migrate



broadcast
1-composer require pusher/pusher-php-server
2-npm install --save laravel-echo pusher-js
3-code notification in Folder Notification
4- comment broadcast in Folder App
5- connect .env
6-file Bootstrap

//
1 -  composer require laravel/fortify
2 - php artisan vendor:publish --provider="Laravel\Fortify\FortifyServiceProvider"
3 - php artisan migrate
4 - config/app ,    App\Providers\FortifyServiceProvider::class ,
5 - comment Auth breeze in File Web //require __DIR__.'/auth.php';


///
KYq0zZSpMU-qnsa0IqrYE
nIVcMG4RzG-8AwNJUkuyX
1fMc2jHcb3-Enl6wwAIkc
UdBjRP9xVW-RSerC7LnhJ
r20kHuad6x-vBUm9JJuy6
zXiL1qkE5I-A0Nlg5jbtf
gwKKd8Yqqy-kX55WTYHVX
AkvrGPCIKh-AQxnrFTBDN


////
// Api

php artisan make:controller Api\ProductsController --api

//اعادة تسمية الحقول في api
//كيف بدي يرجع وايش بدي يرجع
php artisan make:resource ProductResource

//App service Provider
//add
JsonResource::withoutWrapping();   //hidden Data data:{}




//auth api
password or sanctum
1-Api Login (create controller accessTokenController)
2-Model User (hasApiToken)

//Currancy

cURL => protocol (native)
HTTPGuzzle => library from cURL => laravel work(HTTPClient);

//////
#policies


 1 - php artisan make:policy RolePolicy --model=Role  // Role = Name Model
////
jop
1 - php artisan make:job DeleteExpiredOrders
2 - http/console/kernl  => Register File DeleteExpiredOrders (ومعرفة وقت ينفذها )
3 - php artisan schedule:run (just one run)
Or
4 - php artisan schedule:work (run every 1 min)

//Import jop
1 - FILEsystem_disk = database
2 - create table jop (php artisan queue:table)
3- php artisan migrate
4- php artisan queue:listen --queue=import ,(Or) php artisan queue:work --queue=import



///
Auth Google and Facebook
1-composer require laravel/socialite
2-create controller (write Code)
3-route (web)
4-php artisan make:migration Add_social_provider_columns_to_users_table
//
using Webhook

1- create controller (write Code)
2 - route (web)
3 - Using tow command Line
4- install File zip strip
4 - 1 command -  a- stripe login -b- stripe listen --forward-to http://localhost:8000/stripe/webhook
5 - 2 command a- stripe triger payment_intent.canceled
